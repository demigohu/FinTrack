type Budget = record {
  id : nat64;
  updated_at : nat64;
  period : text;
  created_at : nat64;
  spent : float64;
  currency : text;
  category : text;
  budget : float64;
};
type GetUtxosResponse = record { utxos : vec Utxo };
type Goal = record {
  id : nat64;
  status : text;
  title : text;
  updated_at : nat64;
  description : text;
  deadline : text;
  created_at : nat64;
  current_amount : float64;
  currency : text;
  target_amount : float64;
  category : text;
  priority : text;
};
type Notification = record {
  id : nat64;
  is_read : bool;
  title : text;
  type_ : text;
  message : text;
  timestamp : nat64;
  category : text;
};
type OutPoint = record { txid : blob; vout : nat32 };
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : GetUtxosResponse; Err : text };
type Result_2 = variant { Ok : nat64; Err : text };
type Transaction = record {
  id : nat64;
  conversion_rate : opt float64;
  fee : opt float64;
  confirmations : opt nat32;
  transaction_type : opt text;
  source : opt text;
  is_income : bool;
  date : text;
  txid : opt text;
  description : text;
  currency : text;
  timestamp : nat64;
  converted_currency : opt text;
  category : text;
  converted_amount : opt float64;
  amount : float64;
};
type Utxo = record { value : nat64; outpoint : OutPoint };
service : () -> {
  add_budget : (text, float64, text, text) -> (Result);
  add_goal : (text, text, float64, float64, text, text, text, text) -> (Result);
  add_manual_transaction : (float64, text, text, text, text, text) -> (Result);
  add_transaction : (float64, text, text, bool, text, text) -> (Result);
  btc_to_satoshis : (float64) -> (nat64) query;
  convert_currency : (float64, text, text) -> (opt float64) query;
  fetch_btc_transactions : () -> (Result_1);
  format_btc_amount : (float64) -> (text) query;
  get_all_rates : () -> (vec record { text; text; float64 }) query;
  get_balance : (text, opt text) -> (float64) query;
  get_btc_balance : () -> (Result_2);
  get_budgets : (opt text) -> (vec Budget) query;
  get_currency_rate : (text, text) -> (opt float64) query;
  get_goals : () -> (vec Goal) query;
  get_notifications : (opt text, bool) -> (vec Notification) query;
  get_total_expense : (text, opt text) -> (float64) query;
  get_total_income : (text, opt text) -> (float64) query;
  get_transactions : () -> (vec Transaction) query;
  get_transactions_by_currency : (text) -> (vec Transaction) query;
  get_transactions_by_period : (text) -> (vec Transaction) query;
  get_transactions_by_source : (text) -> (vec Transaction) query;
  get_unread_notification_count : () -> (nat64) query;
  get_user_balance_summary : () -> (float64, float64, float64) query;
  get_user_summary : () -> (nat64, nat64, nat64, nat64) query;
  get_wallet_address : (text) -> (opt text) query;
  mark_notification_read : (nat64) -> (Result);
  satoshis_to_btc : (nat64) -> (float64) query;
  set_currency_rate : (text, text, float64) -> (Result);
  set_wallet_address : (text, text) -> (Result);
  sync_blockchain_transactions : () -> (Result);
  update_budget_spent : () -> (Result);
  validate_btc_address : (text) -> (bool) query;
}
